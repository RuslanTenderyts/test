{"version":3,"file":"static/js/451.0a7b8428.chunk.js","mappings":"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","sources":["components/Shopping/Shopping.stayled.js","components/ShoppingList/ShoppingList.styled.js","components/ShoppingList/ShoppingItem/ShoppingItem.stayled.js","components/ShoppingList/ShoppingItem/ShoppingItem.js","components/ShoppingList/ShoppingList.js","components/ShoppingForm/ShoppingForm.styled.js","components/ShoppingForm/ShoppingForm.js","components/Shopping/Shopping.js","page/ShoppingCart.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as LocalLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 20px;\n  justify-content: space-between;\n`;\n\nexport const ShopsWrapper = styled.div`\n    border: 1px solid rgb(0, 0, 0);\n    border-radius: 10px;\n    width: 360px;\n    padding: 10px 40px;\n    height: 500px; \n`;\n\n\nexport const Foods = styled.div`\n  border: 1px solid rgb(0 0 0);\n  border-radius: 10px;\n  width: 650px;\n  padding: 10px 50px;\n\n`;\nexport const TotalPrice = styled.p`\n  text-align: center;\n  font-size: 28px;\n  font-weight: bold;\n  margin-top: 0;\n`\nexport const Link = styled(LocalLink)`\n  text-decoration: none;\n  text-align: center;\n  font-size: 32px;\n  font-weight: bold;\n  \n`","import styled from 'styled-components';\n\nexport const ContainerList = styled.ul`\n    display: grid;\n    gap: 30px;\n`;","import styled from 'styled-components';\n\nexport const CardWrapper = styled.li`\n    display: flex;\n    height: 160px;\n    list-style: none;\n    background-color: rgb(242, 242, 242);\n    border-radius: 8px;\n    padding: 16px;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 4px;\n`;\n\nexport const FoodImage = styled.img`\n    width: 250px;\n    height: 160px;\n    object-fit: cover;\n    border-radius: 8px;\n`;\n\nexport const FoodName = styled.h3`\n  margin: 8px;\n  \n`;\n\nexport const FoodContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  \n`;\n\nexport const Input = styled.input`\n  width: 100px;\n  padding: 8px;\n  font-size: 16px;\n  text-align: center;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: none;\n    &:focus {\n      outline: none;\n      border-color: blue;\n      box-shadow: 0 0 5px rgba(0, 0, 255, 0.5);\n    }\n`\nexport const BtnDelete = styled.button`\n  background-color: #ff0000;\n  margin-left: auto;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n    \n    &:hover {\n      background-color: #cc0000;\n    }\n}\n`","import { CardWrapper, FoodImage, FoodName, FoodContainer, Input, BtnDelete} from \"./ShoppingItem.stayled\";\n\nexport const ShoppingCard = ({ food, onChange, removeFood }) => {\n\n    return (\n      <CardWrapper>\n        <FoodImage src={food.image} alt={food.name} />\n        <FoodContainer>\n            <FoodName>{food.name}</FoodName>\n            <p>Price: {food.price} uah</p>\n            <Input \n            type=\"number\" \n            name=\"quantityOfPortions\" \n            value={food.quantity} \n            onChange={(e) => onChange(food.id, parseInt(e.target.value, 10))} \n            min=\"1\" />\n            <BtnDelete onClick={() => removeFood(food.id)}>Delete </BtnDelete>\n        </FoodContainer>\n\n        \n        \n      </CardWrapper>\n    );\n  };\n  \n","import { ContainerList } from \"./ShoppingList.styled\";\nimport { ShoppingCard } from \"../ShoppingList/ShoppingItem/ShoppingItem\";\n\n\nexport const ShoppingList = ({ foods, onChange, removeFood }) => {\n    return (\n      <ContainerList>\n        {foods.map((food) => (\n          <ShoppingCard key={food.id} food={food} onChange={onChange} removeFood={removeFood} />\n        ))}\n      </ContainerList>\n    );\n  };\n","import styled from 'styled-components';\nimport {Form as FormikForm, Field as FormikField, ErrorMessage as FormikError} from 'formik'\n\nexport const FormContact = styled.form`\n    width: 350px;\n    padding: 10px;\n    border: 1px solid black;\n    \n`;\nexport const Label = styled.label`\n    position: relative;\n    display: block;\n    margin: 0px 0px 20px 0px;\n    \n`;\nexport const FieldName = styled.p`\n    margin: 15px 0px 0px 0px;\n    \n`;\n\nexport const Form = styled(FormikForm)`\n    width: 100%;\n    \n`\nexport const Field = styled(FormikField)`\n    padding: 10px 20px;\n    border-radius: 5px;\n    \n`\n\nexport const ErrorMessage = styled(FormikError)`\n    position: absolute;\n    left: 60px;\n    display: block;\n    color: tomato;\n`\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-left: auto;\n  padding: 15px 40px;\n  background-color: #f44336;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n\n    &:active{\n        transform: ${({ disabled }) => (disabled ? 'scale(1)' : 'scale(0.9)')};\n        background-color: ${({ disabled }) => (disabled ? '#f44336' : '#f44221')};\n    }\n\n    \n`\n","import React  from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport { Label, Form, FieldName, Field, ErrorMessage, Button } from \"./ShoppingForm.styled\";\n\nimport { Formik, } from \"formik\";\nimport * as Yup from 'yup';\n\nconst ContactSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(20, 'Too Long!').matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/ , 'Перейди на англійську').required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    phone: Yup.string().min(10, 'Too Short!').max(19, 'Too Long!').matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/ , 'Невірний формат').required('Required'),\n    address: Yup.string().min(10, 'Too Short!').required('Required'),\n  });\n\nexport const ShoppingFormik = ({onSubmit, isdisabled }) => {\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                phone: '',\n                address: '',\n            }}\n            validationSchema={ContactSchema}\n            onSubmit={(values, actions) => {\n                onSubmit({\n                    ...values,\n                    id: nanoid(),\n                });\n                actions.resetForm();\n            }}\n            >\n            <Form >\n                <Label>\n                    <FieldName> Name </FieldName> \n                    <Field\n                    placeholder=\"Jane Doe\"\n                    type=\"text\"\n                    name=\"name\"\n                    />\n                    <ErrorMessage name=\"name\" component='span'/>\n                </Label>\n\n                <Label>\n                    <FieldName> Email </FieldName> \n                    <Field\n                    placeholder=\"JaneDoe@ukr.net\"\n                    type=\"text\"\n                    name=\"email\"\n                    />\n                    <ErrorMessage name=\"email\" component='span'/>\n                </Label>\n\n                <Label>\n                    <FieldName> Phone </FieldName>\n                    <Field\n                    placeholder=\"000-000-00-00\"\n                    type=\"tel\"\n                    name=\"phone\"\n                    />\n                    <ErrorMessage name=\"phone\" component='span'/>\n                </Label>\n\n                <Label>\n                    <FieldName> Address </FieldName> \n                    <Field\n                    placeholder=\"Kyiv, Khreschatyk street, home 8, apartment 1\"\n                    type=\"text\"\n                    name=\"address\"\n                    />\n                    <ErrorMessage name=\"address\" component='span'/>\n                </Label>\n                    \n                \n                \n                <Button type=\"submit\" disabled={isdisabled}>Submit</Button>\n            </Form>\n        </Formik>\n    )\n}\n\nPropTypes.ContactForm = {\n    onSubmit: PropTypes.func.isRequired, \n};\n","import React, { useState, useEffect, useRef  } from 'react';\nimport {  useLocation } from \"react-router-dom\";\nimport { Container, ShopsWrapper, Foods, TotalPrice, Link } from './Shopping.stayled';\nimport { ShoppingList} from '../ShoppingList/ShoppingList';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ShoppingFormik } from \"../ShoppingForm/ShoppingForm\"\n\nconst getInitialOrder = () => {\n  const orders = localStorage.getItem('orders');\n  if(orders !== null) {\n    const parsetOrders = JSON.parse(orders);\n    return parsetOrders;\n  };\n  return [];\n};\n\nexport const Shopping = ({selectedFoods, onChange, removeFood}) => {\n  const [orders, setOrders] = useState(getInitialOrder);\n  \n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n    console.log(orders);\n  }, [orders]);\n \n  const handleSubmitClick = (valueForm) => {\n    setOrders(prevState => [...prevState , {...valueForm , foods: {...selectedFoods}}])\n  }\n\n  const calculateTotalPrice = (foods) => {\n    const totalPrice = foods.reduce((accumulator, food) => {\n      const foodPrice = food.price;\n      const foodQuantity = food.quantity;\n      const foodTotalPrice = foodPrice * foodQuantity;\n      return accumulator + foodTotalPrice;\n  }, 0);\n\n    return totalPrice;\n  };\n\n  const isdisabled =  !(selectedFoods.length > 0);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? \"/\");\n\n  return (\n    <>\n    <Container>\n        <ShopsWrapper>\n            <ShoppingFormik onSubmit={handleSubmitClick} isdisabled={isdisabled}/>\n        </ShopsWrapper>\n        <Foods>\n            <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n              {isdisabled ? (\n                <Link to={backLinkHref.current} styled={{textDecoration: 'none'}}> &#8592; You haven't ordered anything yet. Return to the shops. </Link>\n                ) : (\n                  <>\n                    <h3>Check the order:</h3>   \n                    <ShoppingList foods={selectedFoods} onChange={onChange} removeFood={removeFood} />\n                  </>\n                )}\n              \n            </Scrollbars>\n        </Foods>\n    </Container>\n    <TotalPrice>Total prise: {calculateTotalPrice(selectedFoods)} UAH</TotalPrice>\n    </>\n  );\n};\n\n","import { Shopping } from \"../components/Shopping/Shopping\"\n\nconst ShoppingCart = ({selectedFoods, onChange, removeFood}) => {\n\n    return (\n        <div>\n            <Shopping selectedFoods={ selectedFoods } onChange={onChange} removeFood={removeFood}/>\n            \n        </div>\n    )\n}\n\nexport default ShoppingCart;"],"names":["Container","styled","ShopsWrapper","Foods","TotalPrice","Link","LocalLink","ContainerList","CardWrapper","FoodImage","FoodName","FoodContainer","Input","BtnDelete","ShoppingCard","food","onChange","removeFood","src","image","alt","name","price","type","value","quantity","e","id","parseInt","target","min","onClick","ShoppingList","foods","map","Label","FieldName","Form","FormikForm","Field","FormikField","ErrorMessage","FormikError","Button","disabled","ContactSchema","Yup","shape","max","matches","required","email","phone","address","ShoppingFormik","onSubmit","isdisabled","initialValues","validationSchema","values","actions","nanoid","resetForm","placeholder","component","PropTypes","getInitialOrder","orders","localStorage","getItem","JSON","parse","Shopping","selectedFoods","useState","setOrders","useEffect","setItem","stringify","console","log","length","location","useLocation","backLinkHref","useRef","state","from","valueForm","prevState","style","width","height","to","current","textDecoration","reduce","accumulator"],"sourceRoot":""}